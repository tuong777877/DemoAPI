// <auto-generated />
using System;
using DemoMyWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoMyWebAPI.Migrations
{
    [DbContext(typeof(CarStoreContext))]
    partial class CarStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DemoMyWebAPI.Data.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descirption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Price")
                        .HasMaxLength(50)
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCate");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.CateCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CategoryCar", (string)null);
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.CateCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CategoryCustomer", (string)null);
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IdCate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCate");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.OrderDetail", b =>
                {
                    b.Property<Guid>("IdCar")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("UntilPrice")
                        .HasColumnType("real");

                    b.HasKey("IdCar", "IdOrder");

                    b.HasIndex("IdOrder");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.Car", b =>
                {
                    b.HasOne("DemoMyWebAPI.Data.CateCar", "catecar")
                        .WithMany("Cars")
                        .HasForeignKey("IdCate");

                    b.Navigation("catecar");
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.Customer", b =>
                {
                    b.HasOne("DemoMyWebAPI.Data.CateCustomer", "catecus")
                        .WithMany("Customers")
                        .HasForeignKey("IdCate");

                    b.Navigation("catecus");
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.Order", b =>
                {
                    b.HasOne("DemoMyWebAPI.Data.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.OrderDetail", b =>
                {
                    b.HasOne("DemoMyWebAPI.Data.Car", "Car")
                        .WithMany("orderDetails")
                        .HasForeignKey("IdCar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OderDetail_Car");

                    b.HasOne("DemoMyWebAPI.Data.Order", "Order")
                        .WithMany("orderDetails")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OderDetail_Order");

                    b.Navigation("Car");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.Car", b =>
                {
                    b.Navigation("orderDetails");
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.CateCar", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.CateCustomer", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DemoMyWebAPI.Data.Order", b =>
                {
                    b.Navigation("orderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
